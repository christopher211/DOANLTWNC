<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_dong.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        X9ttAMYAAAAASUVORK5CYII=
</value>
  </data>
  <data name="btn_luuTaiKhoan.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        OwTpP3ErR+vZRQJdAAAAAElFTkSuQmCC
</value>
  </data>
</root>